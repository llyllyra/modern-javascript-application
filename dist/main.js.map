{"mappings":";;;;;;AEAA,MAAM,0BAAI,GAAG;IACT,GAAG,EAAG,kCAAkC;CAC3C;IACD,wCAAoB,GAAL,0BAAI;;ADHnB;AGAA;AAEA,MAAM,yCAAiB,GAAG,CAAC,IAAI,EAAE,MAAM,GAAG,mBAAmB,GAC3D,CAAA,GAAA,qBAAQ,CAAA,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,AAAC;AAE9C,MAAM,yCAAM,GAAG,CAAC,IAAI,GAAK,CAAA,GAAA,qBAAQ,CAAA,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,YAAY,AAAC;;ADLjE;AEAA,MAAM,4BAAM,GAAG,CAAC,MAAM,EAAE,IAAI,GAAK;IAC/B,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,AAAC;IAC9D,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,AAAC;IAExC,IAAI,KAAK,EACP,KAAK,CAAC,OAAO,EAAE,CAAC;IAGlB,IAAI,KAAK,CAAC,GAAG,EAAE;QACb,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE;YACJ,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE;gBACR;oBACE,KAAK,EAAE,gBAAa;oBACpB,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,KAAK;oBACX,WAAW,EAAE,KAAK;iBACnB;aACF;SACF;KACF,CAAC,CAAC;CACJ,AAAC;IAEF,wCAAsB,GAAP,4BAAM;;;AFtBrB,IAAI,4BAAM,GAAG,EAAE,AAAC;AAChB,IAAI,0BAAI,GAAG,EAAE,AAAC;AACd,MAAM,oCAAc,GAAG,CAAC,WAAW,GAAK;IACtC,4BAAM,GAAG,EAAE,CAAC;IACZ,0BAAI,GAAG,EAAE,CAAC;IACV,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,AAAC;IACjD,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;IAE/C,IAAI,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,AAAC;IACnC,MAAM,CAAC,SAAS,GAAG,CAAC;YACV,EAAE,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;YAC3B,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAC,CAAC;IACR,KAAK,CAAC,SAAS,GAAG,CAAC;YACT,EAAE,CAAA,GAAA,yCAAiB,CAAA,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;;8CAGV,EACpC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CACpC;aACI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;QAClD,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;WAGxC,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;QAChD,CAAC,CAAC;IACR,0BAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,4BAAM,CAAC,IAAI,CAAC,CAAA,GAAA,yCAAM,CAAA,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QAC1B,0CAA0C;QAC1C,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/B,0BAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxC,4BAAM,CAAC,IAAI,CAAC,CAAA,GAAA,yCAAM,CAAA,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,MAAM,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC;YAAC,CAAC;SAAC,CAAC,AAAC;QACzC,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QACjC,GAAG,CAAC,SAAS,GAAG,CAAC;YACT,EAAE,CAAA,GAAA,yCAAiB,CAAA,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;yEACiB,EAC/D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CACrB;aACI,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CACd,CAAC;WACK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;;QAEjC,CAAC,CAAC;KACP;IAED,kCAAkC;IAClC,CAAA,GAAA,wCAAM,CAAA,CAAC,4BAAM,EAAE,0BAAI,CAAC,CAAC;CACtB,AAAC;IAEF,wCAA8B,GAAf,oCAAc;;;;AFnD7B,IAAI,iCAAW,GAAG,EAAE,AAAC;AACrB,MAAM,kCAAY,GAAG,OAAO,IAAI,GAAK;IACnC,IAAI,GAAG,GACL,2DAA2D,GAC3D,IAAI,GACJ,oCAAoC,GACpC,CAAA,GAAA,wCAAI,CAAA,CAAC,GAAG,AAAC;IAEX,MAAM,CAAA,GAAA,sCAAK,CAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAK;QACjC,iCAAW,GAAG,GAAG,CAAC,IAAI,CAAC;KACxB,CAAC,CAAC;IAEH,CAAA,GAAA,wCAAc,CAAA,CAAC,iCAAW,CAAC,CAAC;CAC7B,AAAC;IAEF,wCAA4B,GAAb,kCAAY;;ADlB3B;AAEA,MAAM,2BAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,AAAC;AACvD,MAAM,0BAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,AAAC;AAC5C,IAAI,0BAAI,AAAC;AAET,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAM;IACpC,CAAA,GAAA,wCAAY,CAAA,CAAC,OAAO,CAAC,CAAC;CACvB,CAAC,CAAC;AAEH,2BAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,GAAK;IACrC,0BAAI,GAAG,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;CAC5C,CAAC,CAAC;AAEH,0BAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,GAAK;IACvC,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE;QACrB,CAAA,GAAA,wCAAY,CAAA,CAAC,0BAAI,CAAC,CAAC;QACnB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,2BAAK,CAAC,KAAK,GAAG,EAAE,CAAC;KAClB;CACF,CAAC,CAAC","sources":["src/index.js","src/fetchWeather.js","src/config.js","src/weatherDisplay.js","src/getDate.js","src/charts.js"],"sourcesContent":["import fetchWeather from \"./fetchWeather.js\";\n\nconst input = document.getElementById(\"weatherSearch\");\nconst form = document.querySelector(\"form\");\nlet City;\n\nwindow.addEventListener(\"load\", () => {\n  fetchWeather(\"namur\");\n});\n\ninput.addEventListener(\"keyup\", (e) => {\n  City = e.currentTarget.value.toLowerCase();\n});\n\nform.addEventListener(\"keypress\", (e) => {\n  if (e.key === \"Enter\") {\n    fetchWeather(City);\n    e.preventDefault();\n    input.value = \"\";\n  }\n});\n","import Data from \"./config.js\";\nimport weatherDisplay from \"./weatherDisplay.js\";\nimport axios from \"axios\";\nlet dataWeather = [];\nconst fetchWeather = async (city) => {\n  let url =\n    \"https://api.openweathermap.org/data/2.5/forecast/daily?q=\" +\n    city +\n    \"&units=metric&lang=fr&cnt=7&appid=\" +\n    Data.key;\n\n  await axios.get(url).then((res) => {\n    dataWeather = res.data;\n  });\n\n  weatherDisplay(dataWeather);\n};\n\nexport default fetchWeather;\n","const Data = {\n    key : \"a34115395d0b8b32521b321a623aedd0\"\n}\nexport default Data;","import { formatToLocalTime, AddDay } from \"./getDate.js\";\nimport charts from \"./charts.js\";\nlet labels = [];\nlet data = [];\nconst weatherDisplay = (dataWeather) => {\n  labels = [];\n  data = [];\n  const result = document.getElementById(\"result\");\n  const today = document.querySelector(\".today\");\n\n  let dates = dataWeather.list[0].dt;\n  result.innerHTML = `\n        <h2>${dataWeather.city.country}</h2>\n        <h3>${dataWeather.city.name}</h3>\n        `;\n  today.innerHTML = `\n        <h4>${formatToLocalTime(dataWeather.list[0].dt)}</h4>\n        <section class=\"text\">\n        <img \n        src=\"http://openweathermap.org/img/wn/${\n          dataWeather.list[0].weather[0].icon\n        }@2x.png\" \n        alt=\"${dataWeather.list[0].weather[0].description}\">\n        ${Math.round(dataWeather.list[0].temp.max)}° Celcius\n        \n        </section>\n        <p>${dataWeather.list[0].weather[0].description}</p>\n        `;\n  data.push(dataWeather.list[0].temp.max);\n  labels.push(AddDay(dataWeather.list[0].dt));\n  for (let i = 1; i < 6; i++) {\n    // eslint-disable-next-line no-unused-vars\n    dates = dataWeather.list[i].dt;\n    data.push(dataWeather.list[i].temp.max);\n    labels.push(AddDay(dataWeather.list[0].dt));\n    const day = document.getElementById([i]);\n    const list = dataWeather.list[i];\n    day.innerHTML = `\n        <h4>${formatToLocalTime(dataWeather.list[i].dt)}</h4>\n        <section class=\"text\"><img src=\"http://openweathermap.org/img/wn/${\n          list.weather[0].icon\n        }@2x.png\" \n        alt=\"${list.description}\"> ${Math.round(\n      list.temp.max\n    )}° Celcius</section>\n        <p>${list.weather[0].description}</p>\n      \n        `;\n  }\n\n  //<h4>${getDate(dates,labels)}<h4>\n  charts(labels, data);\n};\n\nexport default weatherDisplay;\n","import { DateTime } from \"luxon\";\n\nconst formatToLocalTime = (secs, format = \"cccc, dd LLL yyyy\") =>\n  DateTime.fromSeconds(secs).toFormat(format);\n\nconst AddDay = (secs) => DateTime.fromSeconds(secs).weekdayShort;\n\nexport { formatToLocalTime, AddDay };\n","const charts = (labels, data) => {\n  let ctx = document.querySelector(\".myChart\").getContext(\"2d\");\n  const chart = Chart.getChart(\"myChart\");\n\n  if (chart) {\n    chart.destroy();\n  }\n\n  new Chart(ctx, {\n    type: \"line\",\n    data: {\n      labels: labels,\n      datasets: [\n        {\n          label: \"Température\",\n          data: data,\n          fill: false,\n          borderColor: \"red\",\n        },\n      ],\n    },\n  });\n};\n\nexport default charts;\n"],"names":[],"version":3,"file":"main.js.map"}